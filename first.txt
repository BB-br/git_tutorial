Gitの練習をしていきます
基本的なワークフローを学びます。

GitHub
アクセストークン

j下へ
k上へ
q閉じる
cd移動
ls見る
-a隠れファイルも見r


testtest
git init
git add <>
git commit -v
git commit -amend (直前のコミットを修正する　git pushしたコミットはやり直してはいけない)

git rm <>
q←戻る
git status

git log
git log --oneline　一行表示
git log -p ファイル名
git log -n 3 最近の三つ

ファイルの変更差分表示
git diff <>
ステージとの差分
git diff HEAD <>
ステージとコミットの差分

git remote add origin http~~
オリジン（URL）登録
git push origin master
origin(リモート名)master(ブランチ名)
git push origin feature
登録したGitHubへ送る
featureブランチを送る

コピーを作成
git clone <>


Github

ファイルを削除を記録
.gitignoreファイルに指定
git rm <> リポジトリ、ワークツリーから削除
git rm --cached <>　リポジトリから削除

ステージした変更を取り消す
git reset HEAD <>
ファイルの変更を取り消す
git checkout -- <>

ファイルの移動を記録
git mv<旧ファイル名><新ファイル名>


originmaster　gitのこと。
nothin to commit working tree is crean
変更するものはなにもないよ
change not stagged for commit
ステージ化してないよ
change to be committed
コミットしてないよ


gitはスナップショットで保存している。差分ではなく、すべてのファイルをその時々で保存している。
コミットを追うことでその時々のファイルを瞬時に追える。


Q&A
ステージはどうしてあるのか？
↓
変更が完了したものを随時ステージ化することでどのファイルが変更されたのかどうかを確認することができる

git gitdiff

エイリアス設定(省略)
git config --global alias.ci commit
git config --global alias.st status
git config --global alias.br branch
git config --global alias.co checkout
